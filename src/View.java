
import static email.SendEmailSSL.createMail;
import static email.SendEmailSSL.mailActivity;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import javax.mail.Session;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import models.Sensor;
import org.json.JSONArray;
import org.json.JSONObject;


/**
 *
 * @author Damish
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form View
     */
    public View() {
        initComponents();
        
         timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        ActionHeading = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        logoutClient = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "sid", "Co2", "Smoke", "Floor", "Room"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(140);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
        }

        ActionHeading.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ActionHeading.setText("Sensor Details Dashboard");

        jLabel1.setText("Real Time Sensor data Updates Every 10 Seconds");

        logoutClient.setText("Logout");
        logoutClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutClientActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Logged in as Client");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ActionHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(logoutClient))
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ActionHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutClient)))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void logoutClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutClientActionPerformed
       
        
                this.dispose();
              
                new Login().setVisible(true);
                
                JOptionPane.showMessageDialog(null,"Logged out succesfully");
        
    }//GEN-LAST:event_logoutClientActionPerformed

    
    
     public ArrayList ListSensors() {

        ArrayList<Sensor> tempList = new ArrayList<>();
        //////////////////////GET Method/////////////////////////
        try {

            URL urlForGetRequest = new URL("http://localhost:8080/SensorData_REST_API/rest/sensors");
            HttpURLConnection conection = (HttpURLConnection) urlForGetRequest.openConnection();
            conection.setRequestProperty("Content-Type", "application/json;");
            conection.setDoOutput(true);
            conection.setDoInput(true);
            conection.setRequestMethod("GET");
            int responseCode = conection.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {

                InputStream in = new BufferedInputStream(conection.getInputStream());

                String result = org.apache.commons.io.IOUtils.toString(in, "UTF-8");

                System.out.println("Result from GET : " + result);

                JSONArray ja1 = new JSONArray(result);

                System.out.println("My Json Array: " + ja1);

                System.out.println("My Json Array Size: " + ja1.length());

                for (int i = 0; i < ja1.length(); i++) {

                    JSONObject myResponse = ja1.getJSONObject(i);

                    Sensor sensorEntry1 = new Sensor(
                            myResponse.getString("sid"),
                            myResponse.getInt("co2Level"),
                            myResponse.getInt("smokeLevel"),
                            myResponse.getInt("floorNo"),
                            myResponse.getInt("roomNo")
                    );
                    tempList.add(sensorEntry1);

                }

                in.close();
                conection.disconnect();
            } else {
                System.out.println("GET NOT WORKED");
            }
        } catch (Exception e) {
        }
/////////////////////end of GET method////////////////
        return tempList;
    }
    
    
    
    
    
    
    
    Timer timer = new Timer(15000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {

             //create email session object
            Session emailSession = mailActivity();
          
            System.out.println("Timer started 15 sec");

            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            ArrayList<Sensor> sdata = new ArrayList<>();
            sdata = ListSensors();
            
//            System.out.println("addRowToJTable method called GET Method Data : " + sdata);

            Object rowData[] = new Object[5];

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            for (int i = 0; i < sdata.size(); i++) {

                rowData[0] = sdata.get(i).id;
                rowData[1] = sdata.get(i).co2Level;
                rowData[2] = sdata.get(i).smokeLevel;
                rowData[3] = sdata.get(i).floor;
                rowData[4] = sdata.get(i).room;

                model.addRow(rowData);

                  
                 //send mail using email service
                if(sdata.get(i).co2Level>=5 || sdata.get(i).smokeLevel>=5){
                   
//                    JOptionPane.showMessageDialog(null,"Sensor exceeded threshold Level!!!"
//                        + "\n!!!FIRE WARNING!!!"
//                        + "\nSensor id:"+sdata.get(i).id
//                        + "\nFloor:"+sdata.get(i).floor
//                        + "\nRoom:"+sdata.get(i).room
//                );
                    
                    createMail( emailSession ,sdata.get(i).id, sdata.get(i).floor,sdata.get(i).room);
                    
                }
                
                
                
                
                
                
            }
        }
    });

    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ActionHeading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logoutClient;
    // End of variables declaration//GEN-END:variables
}
